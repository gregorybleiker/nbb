import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$crypto from"crypto";import*as esm_import$node_fs from"node:fs";import*as esm_import$node_path from"node:path";import*as esm_import$child_process from"child_process";var wAa=new $APP.F(null,"deps","deps",1883360319);var xAa=$APP.C.h($APP.q($APP.sV),$APP.yQ),yAa=esm_import$node_path.resolve(xAa,".nbb",".cache"),nX=$APP.ys.h($APP.q($APP.sV),new $APP.G(null,2,5,$APP.I,[$APP.uE,wAa],null));
if($APP.l(nX)){var zAa;zAa=esm_import$crypto.createHash("sha1").update($APP.m.g(nX),"binary").digest("hex");var oX=esm_import$node_path.resolve(yAa,zAa),AAa=esm_import$node_path.resolve(oX,"deps.edn"),BAa=esm_import$node_path.resolve(oX,"nbb-deps.jar"),pX=esm_import$node_path.resolve(oX,"nbb-deps");if(!$APP.l(esm_import$node_fs.existsSync(pX))){var CAa=($APP.x.h("win32",process.platform),"bb"),qX=esm_import$node_path.resolve(yAa,"extract.bb");esm_import$node_fs.mkdirSync(oX,{recursive:!0});esm_import$node_fs.writeFileSync(AAa,
$APP.m.g(new $APP.h(null,1,[wAa,nX],null)));$APP.Hb.call(null,"Downloading dependencies...");esm_import$child_process.execSync([CAa," --config ",$APP.m.g(AAa)," --deps-root ",$APP.m.g(xAa)," uberjar ",$APP.m.g(BAa)].join(""));$APP.Hb.call(null,"Extracting dependencies...");esm_import$node_fs.writeFileSync(qX,["(fs/unzip ",$APP.tl.l($APP.B([BAa]))," ",$APP.tl.l($APP.B([pX])),")"].join(""));esm_import$child_process.execSync(["bb ",$APP.m.g(qX)].join(""));esm_import$node_fs.unlinkSync(qX);$APP.Hb.call(null,
"Done.")}$APP.Hs(pX)};