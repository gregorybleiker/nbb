import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
import*as esm_import$node_crypto from"node:crypto";import*as esm_import$node_fs from"node:fs";import*as esm_import$node_path from"node:path";import*as esm_import$node_child_process from"node:child_process";var xAa=new $APP.F(null,"deps","deps",1883360319);var yAa=$APP.C.h($APP.q($APP.sV),$APP.wQ),zAa=esm_import$node_path.resolve(yAa,".nbb",".cache"),nX=$APP.ys.h($APP.q($APP.sV),new $APP.G(null,2,5,$APP.I,[$APP.wE,xAa],null));
if($APP.l(nX)){var AAa;AAa=esm_import$node_crypto.createHash("sha1").update($APP.m.g(nX),"binary").digest("hex");var oX=esm_import$node_path.resolve(zAa,AAa),BAa=esm_import$node_path.resolve(oX,"deps.edn"),CAa=esm_import$node_path.resolve(oX,"nbb-deps.jar"),pX=esm_import$node_path.resolve(oX,"nbb-deps");if(!$APP.l(esm_import$node_fs.existsSync(pX))){var DAa=($APP.x.h("win32",process.platform),"bb"),qX=esm_import$node_path.resolve(zAa,"extract.bb");esm_import$node_fs.mkdirSync(oX,{recursive:!0});esm_import$node_fs.writeFileSync(BAa,
$APP.m.g(new $APP.h(null,1,[xAa,nX],null)));$APP.Hb.call(null,"Downloading dependencies...");esm_import$node_child_process.execSync([DAa," --config ",$APP.m.g(BAa)," --deps-root ",$APP.m.g(yAa)," uberjar ",$APP.m.g(CAa)].join(""));$APP.Hb.call(null,"Extracting dependencies...");esm_import$node_fs.writeFileSync(qX,["(fs/unzip ",$APP.tl.l($APP.B([CAa]))," ",$APP.tl.l($APP.B([pX])),")"].join(""));esm_import$node_child_process.execSync(["bb ",$APP.m.g(qX)].join(""));esm_import$node_fs.unlinkSync(qX);
$APP.Hb.call(null,"Done.")}$APP.Hs(pX)};