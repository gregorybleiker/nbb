import { $APP, shadow$provide, $jscomp } from "./nbb_core.js";
const shadow_esm_import = function(x) { return import(x) };
var q3=function(a,b){return $APP.x.h(a,b)?new $APP.G(null,3,5,$APP.I,[null,null,a],null):new $APP.G(null,3,5,$APP.I,[a,b,null],null)},iKa=function(a){return $APP.u(a)?$APP.If.j(function(b,c){var d=$APP.A.j(c,0,null);c=$APP.A.j(c,1,null);return $APP.kk.j(b,d,c)},$APP.Ii($APP.Np.h($APP.Oh.h($APP.Pp,$APP.fk(a)),null)),a):null},jKa=function(a,b,c){var d=$APP.C.h(a,c),e=$APP.C.h(b,c),f=r3(d,e),k=$APP.A.j(f,0,null),n=$APP.A.j(f,1,null);f=$APP.A.j(f,2,null);a=$APP.zf(a,c);b=$APP.zf(b,c);d=a&&b&&(null!=f||
null==d&&null==e);return new $APP.G(null,3,5,$APP.I,[!a||null==k&&d?null:$APP.sh([c,k]),!b||null==n&&d?null:$APP.sh([c,n]),d?$APP.sh([c,f]):null],null)},kKa=function(a,b){var c=$APP.Wk,d=c.h,e=s3.j,f=$APP.ff(a)?a:$APP.Ii(a),k=$APP.ff(b)?b:$APP.Ii(b),n=$APP.Hq.g;a=$APP.Ge(a);b=$APP.Ge(b);return $APP.Ii(d.call(c,iKa,e.call(s3,f,k,n.call($APP.Hq,a>b?a:b))))},lKa=function(a,b){return new $APP.G(null,3,5,$APP.I,[$APP.wh($APP.qT.h(a,b)),$APP.wh($APP.qT.h(b,a)),$APP.wh($APP.pT.h(a,b))],null)},t3=function(a){if(null!=
a&&null!=a.$i)a=a.$i(a);else{var b=t3[$APP.ja(null==a?null:a)];if(null!=b)a=b.g?b.g(a):b.call(null,a);else if(b=t3._,null!=b)a=b.g?b.g(a):b.call(null,a);else throw $APP.Xb("EqualityPartition.equality-partition",a);}return a},u3=function(a,b){if(null!=a&&null!=a.Zi)a=a.Zi(a,b);else{var c=u3[$APP.ja(null==a?null:a)];if(null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else if(c=u3._,null!=c)a=c.h?c.h(a,b):c.call(null,a,b);else throw $APP.Xb("Diff.diff-similar",a);}return a},r3=function(a,b){return $APP.x.h(a,
b)?new $APP.G(null,3,5,$APP.I,[null,null,a],null):$APP.x.h(t3(a),t3(b))?u3(a,b):q3(a,b)},mKa=new $APP.F(null,"sequential","sequential",-1082983960),nKa=new $APP.t("clojure.data","diff","clojure.data/diff",-683865998,null),v3=new $APP.F(null,"atom","atom",-397043653),oKa=new $APP.t(null,"diff","diff",-518492986,null);var s3=function s3(a){switch(arguments.length){case 2:return s3.h(arguments[0],arguments[1]);case 3:return s3.j(arguments[0],arguments[1],arguments[2]);default:throw Error(["Invalid arity: ",$APP.m.g(arguments.length)].join(""));}};s3.h=function(a,b){return s3.j(a,b,$APP.oT.h($APP.fk(a),$APP.fk(b)))};s3.j=function(a,b,c){return $APP.If.j(function(d,e){return $APP.Dq.g($APP.Wk.j($APP.Tn,d,e))},new $APP.G(null,3,5,$APP.I,[null,null,null],null),$APP.Wk.h($APP.Vn.j(jKa,a,b),c))};s3.o=3;t3["null"]=function(){return v3};
t3.string=function(){return v3};t3.number=function(){return v3};t3.array=function(){return mKa};t3["function"]=function(){return v3};t3["boolean"]=function(){return v3};t3._=function(a){return(null!=a?a.G&1024||$APP.Wd===a.Oi||(a.G?0:$APP.Vb($APP.Ac,a)):$APP.Vb($APP.Ac,a))?$APP.Po:(null!=a?a.G&4096||$APP.Wd===a.Si||(a.G?0:$APP.Vb($APP.Ec,a)):$APP.Vb($APP.Ec,a))?$APP.$o:(null!=a?a.G&16777216||$APP.Wd===a.og||(a.G?0:$APP.Vb($APP.Wc,a)):$APP.Vb($APP.Wc,a))?mKa:v3};
u3["null"]=function(a,b){return q3(a,b)};u3.string=function(a,b){return q3(a,b)};u3.number=function(a,b){return q3(a,b)};u3.array=function(a,b){return kKa(a,b)};u3["function"]=function(a,b){return q3(a,b)};u3["boolean"]=function(a,b){return q3(a,b)};
u3._=function(a,b){var c=function(){var d=t3(a);d=d instanceof $APP.F?d.ga:null;switch(d){case "atom":return q3;case "set":return lKa;case "sequential":return kKa;case "map":return s3;default:throw Error(["No matching clause: ",$APP.m.g(d)].join(""));}}();return c.h?c.h(a,b):c.call(null,a,b)};var pKa=$APP.mV.h($APP.rP,null),qKa=new $APP.h(null,1,[oKa,function(){var a=new $APP.ae(function(){return r3},nKa,$APP.Rj([$APP.W,$APP.O,$APP.ao,$APP.WC,$APP.hp,$APP.bo,$APP.yS,$APP.Z,$APP.M,$APP.WI],[$APP.rP,oKa,"clojure/data.cljs",11,1,144,144,$APP.J(new $APP.G(null,2,5,$APP.I,[$APP.xN,$APP.wN],null)),"Recursively compares a and b, returning a tuple of\n  [things-only-in-a things-only-in-b things-in-both].\n  Comparison rules:\n\n  * For equal a and b, return [nil nil a].\n  * Maps are subdiffed where keys match and values differ.\n  * Sets are never subdiffed.\n  * All sequential things are treated as associative collections\n    by their indexes, with results returned as vectors.\n  * Everything else (including strings!) is treated as\n    an atom and compared for equality.",
$APP.l(r3)?r3.D:null])),b=$APP.q(a),c=$APP.Ve(a);a=$APP.l(null)?null:$APP.O.g(c);var d=new $APP.h(null,4,[$APP.W,pKa,$APP.O,a,$APP.Z,$APP.Z.g(c),$APP.M,$APP.M.g(c)],null);return $APP.l($APP.gu.g(c))?$APP.gV.j(a,b,d):$APP.l(function(){var e=$APP.st.g(c);return $APP.l(e)?e:$APP.It.g(c)}())?$APP.hV.j(a,b,d):$APP.Mx.j(a,b,d)}()],null);$APP.zy(new $APP.h(null,1,[$APP.Ut,new $APP.h(null,1,[$APP.rP,qKa],null)],null));